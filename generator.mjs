#!/usr/bin/env node
import b from"path";import d from"fs-extra";import x from"knex";import m from"camelcase";process.stdout.write(process.platform==="win32"?"\x1B[2J\x1B[0f":"\x1B[2J\x1B[3J\x1B[H");const s=d.readJSONSync(b.join(process.cwd(),"mysql-zod.json"));s.folder&&s.folder!==""&&d.emptyDirSync(s.folder);const h=s.camelCase&&s.camelCase===!0,w=s.nullish&&s.nullish===!0,$=s.requiredString&&s.requiredString===!0;function C(e,r){const p=e.split("(")[0],n=r==="YES",t=["z.string()"],i=["z.number()"],l=w?"nullish()":"nullable()",a="nonnegative()",c="min(1)";switch(p){case"date":case"datetime":case"timestamp":case"time":case"year":case"char":case"varchar":case"tinytext":case"text":case"mediumtext":case"longtext":case"json":case"decimal":return n?t.push(l):$&&t.push(c),t.join(".");case"tinyint":case"smallint":case"mediumint":case"int":case"bigint":case"float":case"double":return e.endsWith(" unsigned")&&i.push(a),n&&i.push(l),i.join(".");case"enum":return`z.enum([${e.replace("enum(","").replace(")","").replaceAll(",",", ")}])`}}async function S(e){const r=x({client:"mysql2",connection:{host:e.host,port:e.port,user:e.user,password:e.password,database:e.database}});let n=(await r.raw("SELECT table_name FROM information_schema.tables WHERE table_schema = ?",[e.database]))[0].map(t=>t.table_name).filter(t=>!t.startsWith("knex_")).sort();e.tables&&e.tables.length&&(n=n.filter(t=>e.tables.includes(t))),e.ignore&&e.ignore.length&&(n=n.filter(t=>!e.ignore.includes(t)));for(let t of n){const l=(await r.raw(`DESC ${t}`))[0];h&&(t=m(t));let a=`import z from 'zod'

export const ${t} = z.object({`;for(const o of l){const g=h?m(o.Field):o.Field,y=C(o.Type,o.Null);a=`${a}
  ${g}: ${y},`}a=`${a}
})

export type ${m(`${t}Type`)} = z.infer<typeof ${t}>
`;const c=e.folder&&e.folder!==""?e.folder:".",f=e.suffix&&e.suffix!==""?`${t}.${e.suffix}.ts`:`${t}.ts`,u=b.join(c,f);console.log("Created:",u),d.outputFileSync(u,a)}await r.destroy()}(async()=>await S(s))();
